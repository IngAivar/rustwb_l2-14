fn main() {
    // Создаем канал для передачи целых чисел
    // Канал - это безопасный способ обмена данными между потоками
    let (tx, rx) = std::sync::mpsc::channel::<i32>();

    // Создаем новый поток, который будет отправлять числа в канал
    let handle = std::thread::spawn(move || {
        // Цикл, который отправляет числа от 0 до 9 в канал
        for i in 0..10 {
            /* Отправляем число в канал. Метод `unwrap()` используется для обработки ошибок,
               но в этом случае мы предполагаем, что ошибок не будет */
            tx.send(i).unwrap();
        }
    });

    // Ожидаем завершения дочернего потока
    // Метод `join()` блокирует текущий поток до тех пор, пока дочерний поток не завершит свою работу
    handle.join().unwrap();

    // Получаем значения из канала и выводим их на экран
    for i in rx.iter() {
        println!("{i:?}");
    }
}